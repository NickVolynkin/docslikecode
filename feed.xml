<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://docslikecode.com/feed.xml" />
<link rel="alternate" type="text/html" href="http://docslikecode.com" />
<updated>2017-03-28T22:42:59-05:00</updated>
<id>http://docslikecode.com/</id>
<author>
  <name>Anne Gentle</name>
  <uri>http://docslikecode.com/</uri>
  <email>annegentle@justwriteclick.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Case Study - Pantheon, Rachel Whitton]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/pantheon-case-study/" />
  <id>http://docslikecode.com/articles/pantheon-case-study</id>
  <updated>Sat Mar 18 09:50:27 CDT 2017T00:00:00-00:00</updated>
  <published>2017-03-18T00:00:00-05:00</published>
  
  <author>
    <name>Rachel Whitton</name>
    <uri>http://docslikecode.com</uri>
    
  </author>
  <content type="html">
    &lt;p&gt;Pantheon is a website management platform for Drupal and WordPress. In this use case, their Technical Content Editor Rachel Whitton describes the use of GitHub for documentation as well as their workflow.&lt;/p&gt;

&lt;h4 id=&quot;what-site-or-sites-do-you-create-from-github-source&quot;&gt;What site or sites do you create from GitHub source?&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://pantheon.io/docs&quot;&gt;pantheon.io/docs&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;what-are-the-repositories-that-build-the-deliverables&quot;&gt;What are the repositories that build the deliverables?&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pantheon-systems/documentation&quot;&gt;github.com/pantheon-systems/documentation&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;can-you-give-an-idea-of-the-size-such-as-how-many-pages-source-and-output-if-theyre-private-thats-fine-too-talk-about-what-led-to-that-decision&quot;&gt;Can you give an idea of the size, such as how many pages (source and output)? If they’re private, that’s fine too, talk about what led to that decision.&lt;/h4&gt;
&lt;p&gt;Source files: 588 These are all publicly-editable source files.
Output files: 602&lt;/p&gt;

&lt;h4 id=&quot;when-did-your-migration-to-github-occur&quot;&gt;When did your migration to GitHub occur?&lt;/h4&gt;
&lt;p&gt;We began the process in November of 2014 by creating a private repository for the content migration and initial development of a new static site (built with &lt;a href=&quot;https://sculpin.io&quot;&gt;Sculpin&lt;/a&gt;). The site went live in January 2015 and the repository went from private to public in April 2015.&lt;/p&gt;

&lt;h4 id=&quot;what-factors-led-your-team-to-choose-github-for-docs&quot;&gt;What factors led your team to choose GitHub for docs?&lt;/h4&gt;

&lt;p&gt;We chose to host our documentation repository on GitHub to align ourselves with tools and workflows adopted by other teams across our organization for better collaboration. Our secondary goal was to tap into the collective intellect of our developer community by allowing public contributions. Over time, we began documenting upcoming features in the open prior to their full release which resulted in new levels of participation in the project on GitHub (feedback on product functionality and design, bug reports, etc).&lt;/p&gt;

&lt;h4 id=&quot;what-type-of-audience-are-you-writing-for-do-your-readers-write-with-you-if-so-how&quot;&gt;What type of audience are you writing for? Do your readers write with you? If so, how?&lt;/h4&gt;

&lt;p&gt;Pantheon’s audience for documentation consists primarily of developers and technical  advocates for digital agencies. Public contributions are most often initiated from a call to action on the site. Visitors start by clicking the Contribute button, then either edit the current page, report an issue, or suggest new content. Depending on the selection, a new tab for GitHub will open to either edit the page or open an issue using a pre-filled template. &lt;a href=&quot;https://github.com/pantheon-systems/documentation/blob/master/CONTRIBUTING.md#contributors&quot;&gt;We encourage all contributors to create a profile&lt;/a&gt; and attribute their work alongside any pull requests.&lt;/p&gt;

&lt;h4 id=&quot;how-active-is-your-review-queue-how-often-do-you-publish&quot;&gt;How active is your review queue? How often do you publish?&lt;/h4&gt;

&lt;p&gt;The documentation project receives an average of almost 40 commits per week. The site is continuously delivered upon each commit to the default branch.&lt;/p&gt;

&lt;h4 id=&quot;do-you-merge-or-rebase-have-you-kept-the-same-workflow-always-how-long-has-the-workflow-been-in-place&quot;&gt;Do you merge or rebase? Have you kept the same workflow always? How long has the workflow been in place?&lt;/h4&gt;

&lt;p&gt;It depends. Generally, our workflow is to merge into the default branch once updates have been peer reviewed on a “feature” branch. We use rebase as needed or as an alternative to merging when including work in progress from one feature branch on another during their simultaneous development to ensure changes are aligned and accounted for. Our workflow is constantly evolving to better serve the project.&lt;/p&gt;

&lt;h4 id=&quot;whats-your-biggest-win-from-using-github-for-docs-tell-a-story&quot;&gt;What’s your biggest win from using GitHub for docs? Tell a story.&lt;/h4&gt;

&lt;p&gt;We try our best to prevent gaps in documentation, but one area that’s really challenging for us is covering external integrations. I didn’t know it at the time, but making the move to GitHub set us up to receive high value contributions from other organizations. Chris Tietzel, CEO and Founder of Lockr, submitted an article (https://pantheon.io/docs/guides/lockr/) to the docs via GitHub after receiving support requests from users for help installing and integrating Lockr on Pantheon-hosted websites.&lt;/p&gt;

&lt;h4 id=&quot;what-would-you-warn-others-about-when-thinking-about-github-for-docs&quot;&gt;What would you warn others about when thinking about GitHub for docs?&lt;/h4&gt;

&lt;p&gt;Think about the contributor and moderator experiences - don’t be afraid to adjust workflows as your project matures. Be aware that moderators won’t have write access to forks unless granted by the maintainer of the fork - this means you’ll need to have a plan for copy edits on Pull Requests from a fork that are initiated from non-org members. We handle these by using GitHub’s suggested workflow for merging locally on the command line: checkout a new branch, pull commits from the fork, make copy edits, stage and commit, switch to the default branch, then merge and push to GitHub. The Pull Request will update to reflect its merged status within the default branch.&lt;/p&gt;

&lt;h4 id=&quot;would-you-suggest-migrating-content-or-only-building-new&quot;&gt;Would you suggest migrating content or only building new?&lt;/h4&gt;

&lt;p&gt;It depends. We migrated a lot of content because it didn’t make sense to start over. I’d say migrate what you can but don’t be afraid to start fresh depending on the needs and goals of your project. If you do migrate, automate the process as much as possible. Your sanity will thank you.&lt;/p&gt;

&lt;h4 id=&quot;do-you-have-automation-if-so-what-type-or-tooling-and-where-is-the-automation-in-the-workflow&quot;&gt;Do you have automation? If so, what type or tooling, and where is the automation in the workflow?&lt;/h4&gt;

&lt;p&gt;Pantheon uses CircleCI for continuous integration which builds all commits pushed to GitHub then tests and deploys changes to either a staging environment or to production. Deployments to production occur via rsync after tests have run successfully. If any test fails (broken link, performance regression, etc.) The build will fail on CircleCI and the deployment to production is skipped until a passing build occurs. Branches other than our default branch get deployed to isolated cloud development environments for staging with unique and publicly accessible URLs. Deployments to staging environments happen before the test suite is run to help debug issues and/or failures. Once builds have been deployed to a staging environment, a comment is created on the commit in GitHub with a link to the changes for quick and easy peer review. Once a feature branch has been merged into the default, the associated staging environment is automatically deleted along with the branch. The automation procedures are scripted in Bash and configured in the &lt;code class=&quot;highlighter-rouge&quot;&gt;circle.yml&lt;/code&gt; file within the project’s root directory. The staging environments are created using Pantheon’s command line tool, &lt;a href=&quot;https://pantheon.io/docs/terminus/&quot;&gt;Terminus&lt;/a&gt;, and our &lt;a href=&quot;https://pantheon.io/features/multidev-cloud-environments&quot;&gt;Multidev&lt;/a&gt; feature.&lt;/p&gt;

&lt;p&gt;This workflow is not available to forks for security reasons. For details, see CircleCI’s documentation: &lt;a href=&quot;https://circleci.com/docs/fork-pr-builds/#security-implications-of-running-builds-for-pull-requests-from-forks&quot;&gt;Security Implications of Running Builds for Pull Requests from Forks&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;are-there-any-questions-you-wish-you-had-asked-before-using-github-for-docs&quot;&gt;Are there any questions you wish you had asked before using GitHub for docs?&lt;/h4&gt;

&lt;p&gt;How do the needs of open source software projects differ from those of a documentation project? Where does GitHub fail to fulfill the needs of documentation projects and how can those gaps be filled?&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/pantheon-case-study/&quot;&gt;Case Study - Pantheon, Rachel Whitton&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on March 18, 2017.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Coming Soon - Write Docs Like Code Ebook]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/coming-soon-writing-docs-like-code/" />
  <id>http://docslikecode.com/articles/coming-soon-writing-docs-like-code</id>
  <updated>Thu Dec 29 20:07:26 CST 2016T00:00:00-00:00</updated>
  <published>2016-12-29T00:00:00-06:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;I’m working hard on a new book with two collaborators, Diane Fleming and Kelly Holcomb, titled “Write Docs Like Code.” We’re editing and organizing like mad now, working hard to get all our experiences and best practices written down for the world to see. So I ask you, what do you want to know about writing docs like code?&lt;/p&gt;

&lt;p&gt;Here are some of the topics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Why use GitHub for docs?&lt;/li&gt;
  &lt;li&gt;Information architecture&lt;/li&gt;
  &lt;li&gt;Workflows&lt;/li&gt;
  &lt;li&gt;Author and build content&lt;/li&gt;
  &lt;li&gt;Quality assurance&lt;/li&gt;
  &lt;li&gt;Review&lt;/li&gt;
  &lt;li&gt;Automate builds&lt;/li&gt;
  &lt;li&gt;Lessons learned&lt;/li&gt;
  &lt;li&gt;Tutorials: Get started with docs like code&lt;/li&gt;
  &lt;li&gt;What about wikis?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you treat docs as code, what are your biggest barriers? Your looming concerns? Let me know so we can address these in the book itself. Sign up below to find out when the book is available.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/coming-soon-writing-docs-like-code/&quot;&gt;Coming Soon - Write Docs Like Code Ebook&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on December 29, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Remodeling documentation]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/remodel-your-docs/" />
  <id>http://docslikecode.com/articles/remodel-your-docs</id>
  <updated>Sat Nov 26 16:23:13 CST 2016T00:00:00-00:00</updated>
  <published>2016-11-26T00:00:00-06:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;A few years ago we went house-hunting in Austin, Texas. One house was so popular during the first showing, there were six back-to-back appointments. We waited in the driveway while another couple toured it. Once they left, we could quickly go through it while another prospective buyer waited on the front walkway.&lt;/p&gt;

&lt;p&gt;This house was awful. Every single surface was ugly, out-dated, and circa 1973. There was a giant hole in dirt by the front porch, likely dug by an animal. But you know what? I loved it. I wanted to bring it back to a vibrant family home, taking it back from the rogue porch-dwelling raccoons — or was it dirt-digging armadillos? We may never know.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/trikersticks-raccoon.jpg&quot; alt=&quot;Raccoon visiting&quot; title=&quot;Raccoon visiting&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s look at your code base and your doc base as a great house with a good layout and foundational “bones.” You still need that “punch list” to hand to your contractor. When you move towards more docs like code techniques, make sure you treat your doc base like a code base, and track defects. Get that “punch list” done.&lt;/p&gt;

&lt;p&gt;With a code base, you know how much remodeling you need to do. The same thinking can work well for docs. How dated have your docs become? How accurate are the docs compared to the rest of the code base? How can you make the site livable and vibrant again?&lt;/p&gt;

&lt;p&gt;Let’s give your readers the chance to do those quality checks for you as easily as possible: by reporting the bug on the page where they found it.&lt;/p&gt;

&lt;p&gt;This technique works well when:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You have more readers than contributors. (I generally hope this always happens.)&lt;/li&gt;
  &lt;li&gt;Your readers are super busy. Still, they do want to make the docs better and help others.&lt;/li&gt;
  &lt;li&gt;You want to know how far your docs have “drifted” from the truth.&lt;/li&gt;
  &lt;li&gt;You want your docs to be more trustworthy by chipping away at a bug backlog.&lt;/li&gt;
  &lt;li&gt;You have a private GitHub repo for documentation, but you want to enable public bug reports with tracking back to your docs repo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your quick win is to look at your current docs site, any given page. Is there a way to report a bug publicly, to add to the “punch list?”&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Bare minimum starter level would be an email address link from every page.&lt;/li&gt;
  &lt;li&gt;Level up by adding a link to your GitHub source repo Issues page so readers can report bugs.&lt;/li&gt;
  &lt;li&gt;Better yet, write a quick bit of code to embed on every output doc page so that the issue is pre-filled with relevant information.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are some resources to get your first punch in that punch list:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using Python Sphinx? The OpenStack docs theme has some Javascript you could re-use to pre-populate an Issue template so the reporter sends the page URL, the source URL, the git SHA of the commit for that version of the page, and the release version value. See this &lt;a href=&quot;https://github.com/openstack/openstackdocstheme/blob/master/openstackdocstheme/theme/openstackdocs/static/js/docs.js#L119&quot;&gt;docs.js snippet&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Using a private repo for docs, but want to track bugs publicly? Use &lt;a href=&quot;https://help.github.com/articles/issues-only-access-permissions/&quot;&gt;Issues-only Access Permissions&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Want to add a bit of code to pre-create Issues to use as comments on every page? Free yourself from Disqus comments. Try this &lt;a href=&quot;http://zpbappi.com/jekyll-with-tags-archive-and-comments-in-github-pages/&quot;&gt;set of tips and sample code in a blog post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/remodel-your-docs/&quot;&gt;Remodeling documentation&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on November 26, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Building Docs Like Code]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/what-docs-like-code-looks-like/" />
  <id>http://docslikecode.com/articles/what-docs-like-code-looks-like</id>
  <updated>Sun Sep 25 15:35:08 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-24T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Let’s take a look at what docs like code looks like in practice.&lt;/p&gt;

&lt;p&gt;The basic steps on a Mac are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Make sure you have all the pre-requisites set up for Ruby, Jekyll, and Bundler. &lt;a href=&quot;https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/&quot;&gt;Set up GitHub Pages locally&lt;/a&gt; as instructed in the excellent GitHub documentation.&lt;/li&gt;
  &lt;li&gt;Clone a repository that contains a Jekyll theme that you like. We’re using the &lt;a href=&quot;https://mmistakes.github.io/so-simple-theme/&quot;&gt;so-simple theme&lt;/a&gt; here.&lt;/li&gt;
  &lt;li&gt;Switch to the cloned git directory.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install the required gems.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; to serve the content from a local web server.&lt;/li&gt;
  &lt;li&gt;Copy and paste the &lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:4000/&lt;/code&gt; URL into your web browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This video shows you how to clone a GitHub repo with an existing Jekyll theme, and build it locally.&lt;/p&gt;

&lt;h3 id=&quot;how-its-made&quot;&gt;How it’s made&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/what-docs-like-code-looks-like/&quot;&gt;Building Docs Like Code&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on September 24, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Quality Tracking with GitHub for Docs]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/doc-issues-tracking/" />
  <id>http://docslikecode.com/articles/doc-issues-tracking</id>
  <updated>Fri Sep 23 21:03:14 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-23T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;A definitive aspect of a docs-like-code philosophy is attention to quality and accuracy. You want the docs to get better and better. You want to know if the docs are out of date compared to tightly-coupled code. You want people to report issues when they see something that needs fixing. The vision is that more readers mean more testers, and those readers and testers should report problems right there on the page.&lt;/p&gt;

&lt;h2 id=&quot;what-do-you-do-when-people-say-the-docs-suck&quot;&gt;What do you do when people say, “The Docs Suck.”?&lt;/h2&gt;

&lt;p&gt;It’s a pretty simple ask:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Tell me which page.&lt;/li&gt;
  &lt;li&gt;Tell me your expectations for that page.&lt;/li&gt;
  &lt;li&gt;Tell me how to fix it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can then pre-fill with additional information to help you or other collaborators fix the bug, such as the source file and when it was merged into the repository.&lt;/p&gt;

&lt;p&gt;All these concerns can be addressed with a great &lt;a href=&quot;https://github.com/blog/2111-issue-and-pull-request-templates&quot;&gt;Issues template&lt;/a&gt;. To make an Issue template for a GitHub docs repository, save a file named ISSUE_TEMPLATE in the root directory that contains the information you need in Markdown format. Add headings, links, @-mentions, and task lists to your Issue template.&lt;/p&gt;

&lt;p&gt;In OpenStack, we use &lt;a href=&quot;https://github.com/openstack/openstackdocstheme/blob/master/openstackdocstheme/theme/openstackdocs/static/js/docs.js#L119&quot;&gt;JavaScript&lt;/a&gt; to pre-fill the bug form with the page title, URL, a link to the source file itself, and any tags to add to the logged doc bug. I’m sure you could adopt something similar in your static site generator as well.&lt;/p&gt;

&lt;p&gt;Users click here: &lt;img src=&quot;/images/report-a-bug.png&quot; alt=&quot;Figure: Report a docs bug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, users go through a bug reporting workflow with a pre-filled template:
&lt;img src=&quot;/images/pre-filled-bug-template.png&quot; alt=&quot;Figure: Pre-filled docs bug template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To take it a step further, you can also add a link to edit the source doc file in GitHub’s web editor workflow to have the person fix the bug themselves.&lt;/p&gt;

&lt;h2 id=&quot;from-no-reviews-to-many&quot;&gt;From no reviews to many&lt;/h2&gt;

&lt;p&gt;In traditional enterprise doc systems, writers can go weeks without getting reviews or input. Even when asking and nagging multiple times, sometimes the documentation systems are so separate from code systems that technical reviews are through email. GASP. Put those days behind you and go where the technically knowledgeable people are.&lt;/p&gt;

&lt;p&gt;Working in the same collaboration tools as technical people gives better reviews. We can merge as many as 50 patches per day, though in reality it’s about a dozen a day. We are running up to four automated doc tests per patch and requiring two humans to check the patch and click in order to publish. Each reviewer who can publish must adhere to our review rules, and people follow the rules really well.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/doc-issues-tracking/&quot;&gt;Quality Tracking with GitHub for Docs&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on September 23, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Collaborating on GitHub for Documentation]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/github-collaborators/" />
  <id>http://docslikecode.com/articles/github-collaborators</id>
  <updated>Sat Sep 17 07:11:52 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-18T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Let’s admit it. Writing in isolation sucks. No one to bounce ideas off of, to tell you when you’re flat-out wrong or a terrible typist. Happens in organizations all the time: assignments thrown over a wall, deliverables that are project-centric instead of user-centric. The hardest can be when deadlines set by development, not docs or quality assurance, so those deliverables are always squeezed for time at the end. Less context, less empathy, less collaboration. What to do?&lt;/p&gt;

&lt;p&gt;All these downfalls can be avoided when you collaborate where your readers and makers live—on GitHub. I say, go beyond content curation and curate the audience itself! Write with and for the audience. Have a developer write for her fellow developers. Make sure users have a way to share tips with each other through the documentation.&lt;/p&gt;

&lt;p&gt;As Andy Oram said so well in “Educating computer users: the need for community/author collaboration,” “…the &lt;em&gt;value&lt;/em&gt; in educational content lies in &lt;em&gt;context&lt;/em&gt; (what immediate problem the reader is trying to solve) and &lt;em&gt;timeliness&lt;/em&gt; (what’s true today will be outdated tomorrow).”&lt;/p&gt;

&lt;p&gt;Value, context, and timeliness, all these features are available when you use GitHub to co-author your documentation.&lt;/p&gt;

&lt;h1 id=&quot;motivations&quot;&gt;Motivations&lt;/h1&gt;

&lt;p&gt;When you write with people beyond your immediate team, ensure that those contributors are valued and rewarded! Keep in mind these motivations people have for making information better:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feel a sense of belonging.&lt;/li&gt;
  &lt;li&gt;Meet a desire to pay it forward (reciprocity).&lt;/li&gt;
  &lt;li&gt;Produce effective, time-saving, user support.&lt;/li&gt;
  &lt;li&gt;Build a reputation, recruiting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Harnessing these needs being met is not about gaining free labor. Contributors should be highly, highly valued, and rewarded. It’s about creating opportunity to shine, and curating jobs. Because contributor graphs are available on GitHub, and because the contribution data can be mined to see that reputation being built one pull request at a time, GitHub gives rewards in a new way.&lt;/p&gt;

&lt;p&gt;If you think this all sounds nice but impractical, I encourage you to sign up for the newsletter to learn how to practice these techniques like you would a musical instrument. You need hands-on experience and time to play to get better and better.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/github-collaborators/&quot;&gt;Collaborating on GitHub for Documentation&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on September 18, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[The Vocabulary of GitHub for Documentation]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/github-for-docs/" />
  <id>http://docslikecode.com/articles/github-for-docs</id>
  <updated>Sat Sep 17 07:11:52 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-17T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;What if you could use GitHub, static site generators, and Continuous Integration and Deployment (CI/CD) for our documentation? I imagine you can track your backlog and get some metrics on the quality with their nice contributor graphs. I bet you could measure “docs drift” to figure out just how behind the docs have gotten. Hey, let’s also get access to the developer playground and fun equipment! Let’s play on the slides and swings while we make cool and beautiful documentation, side-by-side as collaborators.&lt;/p&gt;

&lt;p&gt;I hope you’re wondering, “What would happen if we treated docs like code?”&lt;/p&gt;

&lt;p&gt;Believe me, your fellow software builders are wondering, experimenting, or already starting down this road. I’ve seen this vision come to life and want to share my experiences so more people can learn these techniques.&lt;/p&gt;

&lt;p class=&quot;pull-right&quot;&gt;&lt;img src=&quot;http://docslikecode.com/images/git-logo.png&quot; alt=&quot;git&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve found that the principles inherent to the social web for coding work extremely well for documentation. The social web, leads to social coding, leads to social documentation.&lt;/p&gt;

&lt;h1 id=&quot;what-is-github&quot;&gt;What is GitHub?&lt;/h1&gt;

&lt;p class=&quot;pull-left&quot;&gt;&lt;img src=&quot;http://docslikecode.com/images/github-logo.png&quot; alt=&quot;GitHub&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like many tools, git and GitHub were created by fire — through a pressing need for performant and efficient source control management for theLinux kernel. Read the history in the excellent &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git&quot;&gt;Pro Git Book&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GitHub is the web interface for &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; the command-line tool, that works well on Linux, Mac, or Windows. To work with others on a project (code or docs), you merge files. This model is the opposite of using  a “lock and checkout” model, where no one else can work on the piece at the same time as you. With GitHub, you can work separately and bring it all together later. Git has a non-linear branching model that can take some learning to get used to. That said, I’ve found git and GitHub for docs quite practical and even inspirational.&lt;/p&gt;

&lt;p&gt;You can keep docs in a source code repository then the developers will review all your changes prior to merging them in. Unlike traditional source code management, branches are not full copies of entire code base so they are “cheap” and “fast.” The more Agile techniques are applied to documentation, the
more treating docs like code makes sense.&lt;/p&gt;

&lt;h1 id=&quot;github-definitions-and-parallels-for-information&quot;&gt;GitHub definitions and parallels for information&lt;/h1&gt;

&lt;p&gt;I hope I’m talking to people who care a lot about words. Let’s start with some vocabulary and definitions to build upon.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Branch: Indicator of divergence from base without changing the main line (or “trunk” if you like to visualize organic tree-structures to remember this term).&lt;/li&gt;
  &lt;li&gt;Commit: Point-in-time snapshot of repository with changes.&lt;/li&gt;
  &lt;li&gt;Fork (noun): Copy of the repository that is entirely yours in your namespace. In GitHub-land, forking does not have a negative connotation that it can in other contexts (such as taking an open source project in a new direction in a huff to get different contributors). Rather, it is a way to contribute openly and publicly with your account attributed.&lt;/li&gt;
  &lt;li&gt;Fork (verb): Making a copy of the repository.&lt;/li&gt;
  &lt;li&gt;Issue: Defects, tasks, or feature requests.&lt;/li&gt;
  &lt;li&gt;Organization: Collection of group-owned repositories.&lt;/li&gt;
  &lt;li&gt;Pull Request: Comparison of edits to see if team wants to accept changes.&lt;/li&gt;
  &lt;li&gt;Push: Move changes branch-to-branch. When you type &lt;code class=&quot;highlighter-rouge&quot;&gt;man git&lt;/code&gt; at a Terminal prompt to read the &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git.html&quot;&gt;manual page for Git&lt;/a&gt;, you see “Update remote refs along with associated objects,” but that’s more technical than we need here.&lt;/li&gt;
  &lt;li&gt;Repository: Collection of stored code or documentation that is written and built like code.&lt;/li&gt;
  &lt;li&gt;Review: Do a line-by-line comparison of a change, much like an editor would for documentation, and comment on improvements or changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These definitions can give you decision points to make about information architecture, so think about which deliverables you’ll make, who should review and collaborate on those deliverables, and how you can automate publishing with the chunks of a repository or an organization as overarching collections.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href=&quot;https://raw.githubusercontent.com/justwriteclick/docslikecode/master/_posts/articles/2016-09-17-github-for-docs.md&quot;&gt;this article’s source on GitHub&lt;/a&gt; to get a sense of the “source” for a document. We’ll look at the source aspects in a future article. To stay in touch, subscribe to get relevant emails in your inbox.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together.&lt;/label&gt;
	&lt;p&gt;You get three lessons plus a free review checklist in a neat PDF file.&lt;/p&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/github-for-docs/&quot;&gt;The Vocabulary of GitHub for Documentation&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Review, Test, Merge, Build, Deploy, Repeat. <br> Let's Treat Docs Like Code.&lt;/a&gt; on September 17, 2016.&lt;/p&gt;
  </content>
</entry>

</feed>
