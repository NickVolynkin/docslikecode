<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Write, Version, Merge. Let's Treat Docs Like Code.</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://docslikecode.com/feed.xml" />
<link rel="alternate" type="text/html" href="http://docslikecode.com" />
<updated>2016-12-03T08:51:44-06:00</updated>
<id>http://docslikecode.com/</id>
<author>
  <name>Anne Gentle</name>
  <uri>http://docslikecode.com/</uri>
  <email>annegentle@justwriteclick.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Reviewing Docs Efficiently in GitHub]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/save-the-docs/" />
  <id>http://docslikecode.com/articles/save-the-docs</id>
  <updated>Sat Dec 3 08:44:08 CST 2016T00:00:00-00:00</updated>
  <published>2016-12-03T00:00:00-06:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Do you know what tool was found to be most effective at saving lives in hospitals? Literally life-saving‚Ä¶&lt;/p&gt;

&lt;p&gt;Is it new technology? No. It‚Äôs a clipboard, pen, and a well-designed checklist. Checklists can save lives.&lt;/p&gt;

&lt;p&gt;How about a checklist for documentation reviews to save the docs?&lt;/p&gt;

&lt;p&gt;You know you want a quick win in reviewing. For one thing, it‚Äôs great to remain in the GitHub context. It‚Äôs also great to train others to become better reviewers. What? Train others with your Git-works-for-writing mind tricks? Yes, yes you can.&lt;/p&gt;

&lt;p&gt;The newest addition to GitHub‚Äôs web interface includes Reviews. This new collaboration feature gives you the chance to formally ‚Äúapprove‚Äù or ‚Äúrequest changes‚Äù to pull requests. You can also summarize your review as well as line-by-line leave comments, editing them or deleting them before putting the whole summary bundle together. This workflow is game-changing for treating docs like code in a version control system. I love how much discussion this enables amongst various team members - writers, developers, product managers, designers, even customers!&lt;/p&gt;

&lt;p&gt;Your team can make their own review checklist. Here an example based on my experience:&lt;/p&gt;

&lt;h3 id=&quot;self-check-should-i-even-review-this&quot;&gt;Self-check: (Should I even review this?)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Do I know enough about the subject to review for accuracy?&lt;/li&gt;
  &lt;li&gt;Do I have the configuration in place to test the instructions?&lt;/li&gt;
  &lt;li&gt;Have I been reviewing for an hour already? If so, take a 20 minute break.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;organizationaudience&quot;&gt;Organization/Audience:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Does this piece of information belong in the section or deliverable where it is placed?&lt;/li&gt;
  &lt;li&gt;Are the headings correct for the style guidance and overall organization?&lt;/li&gt;
  &lt;li&gt;Is the flow and structure logical for a reader to follow?&lt;/li&gt;
  &lt;li&gt;Will the audience understand the context as well as why this information matters to them?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tooling&quot;&gt;Tooling:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Does the document build correctly without errors?&lt;/li&gt;
  &lt;li&gt;Is the output formatted as expected?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;accuracy&quot;&gt;Accuracy:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Have you run all the commands in the doc review?&lt;/li&gt;
  &lt;li&gt;Are the results as expected?&lt;/li&gt;
  &lt;li&gt;Do they match the version of the software that is in this deliverable?&lt;/li&gt;
  &lt;li&gt;If there are screenshots, are they accurate for the version?&lt;/li&gt;
  &lt;li&gt;Are trademarked names used properly?&lt;/li&gt;
  &lt;li&gt;Are preferred terms used correctly? For example, plugin or plug-in.&lt;/li&gt;
  &lt;li&gt;Is there any security concern with the information?&lt;/li&gt;
  &lt;li&gt;Has data been properly redacted if needed?&lt;/li&gt;
  &lt;li&gt;If the writer intends for the patch to be a bug fix, read the bug itself. Does the doc addition or edit fix the bug?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;syntax&quot;&gt;Syntax:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Is the grammar correct?&lt;/li&gt;
  &lt;li&gt;Is the markup correct?&lt;/li&gt;
  &lt;li&gt;Is the document spell-checked?&lt;/li&gt;
  &lt;li&gt;Are acronyms spelled out at first use?&lt;/li&gt;
  &lt;li&gt;If a glossary is in place, are definitions of new terms available?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;meta-information&quot;&gt;Meta information:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Is the commit message clear as to the purpose of the change?&lt;/li&gt;
  &lt;li&gt;Are bug fixes correctly linked in the commit message?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best coaching for better reviews happens when you wait to respond. Instead of reacting immediately to a pull request, wait. Give others a chance to review first, especially those you want to improve in their reviews. Then, if you find anything, you can comment later and the first reviewer can learn more.
Get your product manager to review your docs. You know you want their insights. They know the customer best, they know the product even better, and they know the business inside and out. Yours may or may not be on GitHub now, but get them an account and show them how fun it is to add thumbs-up emojis to a comment. üëç&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;If you want to get better at reviews and coach others in reviews, read more.&lt;/p&gt;

&lt;p&gt;Smart Bear is a company here in Austin and has gathered best practices for code review.&lt;/p&gt;

&lt;p&gt;Because we want to treat docs like code, think about how these could work well for documentation also:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/&quot;&gt;Best Practices for Code Review&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://smartbear.com/learn/code-review/guide-to-code-review-process/&quot;&gt;Collaborator‚Äôs Guide to a Better Peer Code Review&lt;/a&gt;&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together&lt;/label&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;

&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/save-the-docs/&quot;&gt;Reviewing Docs Efficiently in GitHub&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Version, Merge. Let's Treat Docs Like Code.&lt;/a&gt; on December 03, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Building Docs Like Code]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/what-docs-like-code-looks-like/" />
  <id>http://docslikecode.com/articles/what-docs-like-code-looks-like</id>
  <updated>Sun Sep 25 15:35:08 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-24T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Let‚Äôs take a look at what docs like code looks like in practice.&lt;/p&gt;

&lt;p&gt;The basic steps on a Mac are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Make sure you have all the pre-requisites set up for Ruby, Jekyll, and Bundler. &lt;a href=&quot;https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/&quot;&gt;Set up GitHub Pages locally&lt;/a&gt; as instructed in the excellent GitHub documentation.&lt;/li&gt;
  &lt;li&gt;Clone a repository that contains a Jekyll theme that you like. We‚Äôre using the &lt;a href=&quot;https://mmistakes.github.io/so-simple-theme/&quot;&gt;so-simple theme&lt;/a&gt; here.&lt;/li&gt;
  &lt;li&gt;Switch to the cloned git directory.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install the required gems.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; to serve the content from a local web server.&lt;/li&gt;
  &lt;li&gt;Copy and paste the &lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:4000/&lt;/code&gt; URL into your web browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This video shows you how to clone a GitHub repo with an existing Jekyll theme, and build it locally.&lt;/p&gt;

&lt;h3 id=&quot;how-its-made&quot;&gt;How it‚Äôs made&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;


    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/what-docs-like-code-looks-like/&quot;&gt;Building Docs Like Code&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Version, Merge. Let's Treat Docs Like Code.&lt;/a&gt; on September 24, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Quality Tracking with GitHub for Docs]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/doc-issues-tracking/" />
  <id>http://docslikecode.com/articles/doc-issues-tracking</id>
  <updated>Fri Sep 23 21:03:14 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-23T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;A definitive aspect of a docs-like-code philosophy is attention to quality and accuracy. You want the docs to get better and better. You want to know if the docs are out of date compared to tightly-coupled code. You want people to report issues when they see something that needs fixing. The vision is that more readers mean more testers, and those readers and testers should report problems right there on the page.&lt;/p&gt;

&lt;h2 id=&quot;what-do-you-do-when-people-say-the-docs-suck&quot;&gt;What do you do when people say, ‚ÄúThe Docs Suck.‚Äù?&lt;/h2&gt;

&lt;p&gt;It‚Äôs a pretty simple ask:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Tell me which page.&lt;/li&gt;
  &lt;li&gt;Tell me your expectations for that page.&lt;/li&gt;
  &lt;li&gt;Tell me how to fix it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can then pre-fill with additional information to help you or other collaborators fix the bug, such as the source file and when it was merged into the repository.&lt;/p&gt;

&lt;p&gt;All these concerns can be addressed with a great &lt;a href=&quot;https://github.com/blog/2111-issue-and-pull-request-templates&quot;&gt;Issues template&lt;/a&gt;. To make an Issue template for a GitHub docs repository, save a file named ISSUE_TEMPLATE in the root directory that contains the information you need in Markdown format. Add headings, links, @-mentions, and task lists to your Issue template.&lt;/p&gt;

&lt;p&gt;In OpenStack, we use &lt;a href=&quot;https://github.com/openstack/openstackdocstheme/blob/master/openstackdocstheme/theme/openstackdocs/static/js/docs.js#L119&quot;&gt;JavaScript&lt;/a&gt; to pre-fill the bug form with the page title, URL, a link to the source file itself, and any tags to add to the logged doc bug. I‚Äôm sure you could adopt something similar in your static site generator as well.&lt;/p&gt;

&lt;p&gt;Users click here: &lt;img src=&quot;/images/report-a-bug.png&quot; alt=&quot;Figure: Report a docs bug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, users go through a bug reporting workflow with a pre-filled template:
&lt;img src=&quot;/images/pre-filled-bug-template.png&quot; alt=&quot;Figure: Pre-filled docs bug template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To take it a step further, you can also add a link to edit the source doc file in GitHub‚Äôs web editor workflow to have the person fix the bug themselves.&lt;/p&gt;

&lt;h2 id=&quot;from-no-reviews-to-many&quot;&gt;From no reviews to many&lt;/h2&gt;

&lt;p&gt;In traditional enterprise doc systems, writers can go weeks without getting reviews or input. Even when asking and nagging multiple times, sometimes the documentation systems are so separate from code systems that technical reviews are through email. GASP. Put those days behind you and go where the technically knowledgeable people are.&lt;/p&gt;

&lt;p&gt;Working in the same collaboration tools as technical people gives better reviews. We can merge as many as 50 patches per day, though in reality it‚Äôs about a dozen a day. We are running up to four automated doc tests per patch and requiring two humans to check the patch and click in order to publish. Each reviewer who can publish must adhere to our review rules, and people follow the rules really well.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together&lt;/label&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;

&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/doc-issues-tracking/&quot;&gt;Quality Tracking with GitHub for Docs&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Version, Merge. Let's Treat Docs Like Code.&lt;/a&gt; on September 23, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Collaborating on GitHub for Documentation]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/github-collaborators/" />
  <id>http://docslikecode.com/articles/github-collaborators</id>
  <updated>Sat Sep 17 07:11:52 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-18T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Let‚Äôs admit it. Writing in isolation sucks. No one to bounce ideas off of, to tell you when you‚Äôre flat-out wrong or a terrible typist. Happens in organizations all the time: assignments thrown over a wall, deliverables that are project-centric instead of user-centric. The hardest can be when deadlines set by development, not docs or quality assurance, so those deliverables are always squeezed for time at the end. Less context, less empathy, less collaboration. What to do?&lt;/p&gt;

&lt;p&gt;All these downfalls can be avoided when you collaborate where your readers and makers live ‚Äì on GitHub. I say, go beyond content curation and curate the audience itself! Write with and for the audience. Have a developer write for her fellow developers. Make sure users have a way to share tips with each other through the documentation.&lt;/p&gt;

&lt;p&gt;As Andy Oram said so well in ‚ÄúEducating computer users: the need for community/author collaboration,‚Äù ‚Äú‚Ä¶the &lt;em&gt;value&lt;/em&gt; in educational content lies in &lt;em&gt;context&lt;/em&gt; (what immediate problem the reader is trying to solve) and &lt;em&gt;timeliness&lt;/em&gt; (what‚Äôs true today will be outdated tomorrow).‚Äù&lt;/p&gt;

&lt;p&gt;Value, context, and timeliness, all these features are available when you use GitHub to co-author your documentation.&lt;/p&gt;

&lt;h1 id=&quot;motivations&quot;&gt;Motivations&lt;/h1&gt;

&lt;p&gt;When you write with people beyond your immediate team, ensure that those contributors are valued and rewarded! Keep in mind these motivations people have for making information better:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feel a sense of belonging.&lt;/li&gt;
  &lt;li&gt;Meet a desire to pay it forward (reciprocity).&lt;/li&gt;
  &lt;li&gt;Produce effective, time-saving, user support.&lt;/li&gt;
  &lt;li&gt;Build a reputation, recruiting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Harnessing these needs being met is not about gaining free labor. Contributors should be highly, highly valued, and rewarded. It‚Äôs about creating opportunity to shine, and curating jobs. Because contributor graphs are available on GitHub, and because the contribution data can be mined to see that reputation being built one pull request at a time, GitHub gives rewards in a new way.&lt;/p&gt;

&lt;p&gt;If you think this all sounds nice but impractical, I encourage you to sign up for the newsletter to learn how to practice these techniques like you would a musical instrument. You need hands-on experience and time to play to get better and better.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together&lt;/label&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;

&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/github-collaborators/&quot;&gt;Collaborating on GitHub for Documentation&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Version, Merge. Let's Treat Docs Like Code.&lt;/a&gt; on September 18, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[The Vocabulary of GitHub for Documentation]]></title>
  <link rel="alternate" type="text/html" href="http://docslikecode.com/articles/github-for-docs/" />
  <id>http://docslikecode.com/articles/github-for-docs</id>
  <updated>Sat Sep 17 07:11:52 CDT 2016T00:00:00-00:00</updated>
  <published>2016-09-17T00:00:00-05:00</published>
  
  <author>
    <name>Anne Gentle</name>
    <uri>http://docslikecode.com</uri>
    <email>annegentle@justwriteclick.com</email>
  </author>
  <content type="html">
    &lt;p&gt;What if you could use GitHub, static site generators, and Continuous Integration and Deployment (CI/CD) for our documentation? I imagine you can track your backlog and get some metrics on the quality with their nice contributor graphs. I bet you could measure ‚Äúdocs drift‚Äù to figure out just how behind the docs have gotten. Hey, let‚Äôs also get access to the developer playground and fun equipment! Let‚Äôs play on the slides and swings while we make cool and beautiful documentation, side-by-side as collaborators.&lt;/p&gt;

&lt;p&gt;I hope you‚Äôre wondering, ‚ÄúWhat would happen if we treated docs like code?‚Äù&lt;/p&gt;

&lt;p&gt;Believe me, your fellow software builders are wondering, experimenting, or already starting down this road. I‚Äôve seen this vision come to life and want to share my experiences so more people can learn these techniques.&lt;/p&gt;

&lt;p class=&quot;pull-right&quot;&gt;&lt;img src=&quot;http://docslikecode.com/images/git-logo.png&quot; alt=&quot;git&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve found that the principles inherent to the social web for coding work extremely well for documentation. The social web, leads to social coding, leads to social documentation.&lt;/p&gt;

&lt;h1 id=&quot;what-is-github&quot;&gt;What is GitHub?&lt;/h1&gt;

&lt;p class=&quot;pull-left&quot;&gt;&lt;img src=&quot;http://docslikecode.com/images/github-logo.png&quot; alt=&quot;GitHub&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like many tools, git and GitHub were created by fire ‚Äî through a pressing need for performant and efficient source control management for theLinux kernel. Read the history in the excellent &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git&quot;&gt;Pro Git Book&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GitHub is the web interface for &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; the command-line tool, that works well on Linux, Mac, or Windows. To work with others on a project (code or docs), you merge files. This model is the opposite of using  a ‚Äúlock and checkout‚Äù model, where no one else can work on the piece at the same time as you. With GitHub, you can work separately and bring it all together later. Git has a non-linear branching model that can take some learning to get used to. That said, I‚Äôve found git and GitHub for docs quite practical and even inspirational.&lt;/p&gt;

&lt;p&gt;You can keep docs in a source code repository then the developers will review all your changes prior to merging them in. Unlike traditional source code management, branches are not full copies of entire code base so they are ‚Äúcheap‚Äù and ‚Äúfast.‚Äù The more Agile techniques are applied to documentation, the
more treating docs like code makes sense.&lt;/p&gt;

&lt;h1 id=&quot;github-definitions-and-parallels-for-information&quot;&gt;GitHub definitions and parallels for information&lt;/h1&gt;

&lt;p&gt;I hope I‚Äôm talking to people who care a lot about words. Let‚Äôs start with some vocabulary and definitions to build upon.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Branch: Indicator of divergence from base without changing the main line (or ‚Äútrunk‚Äù if you like to visualize organic tree-structures to remember this term).&lt;/li&gt;
  &lt;li&gt;Commit: Point in time snapshot of repository with changes.&lt;/li&gt;
  &lt;li&gt;Fork (noun): Copy of the repository that is entirely yours in your namespace. In GitHub-land, forking does not have a negative connotation that it can in other contexts (such as taking an open source project in a new direction in a huff to get different contributors). Rather, it is a way to contribute openly and publicly with your account attributed.&lt;/li&gt;
  &lt;li&gt;Fork (verb): Making a copy of the repository.&lt;/li&gt;
  &lt;li&gt;Issue: Defects, tasks, or feature requests.&lt;/li&gt;
  &lt;li&gt;Organization: Collection of group-owned repositories.&lt;/li&gt;
  &lt;li&gt;Pull Request: Comparison of edits to see if team wants to accept changes.&lt;/li&gt;
  &lt;li&gt;Push: Move changes branch-to-branch. The man page says ‚ÄúUpdate remote refs along with associated objects‚Äù but that‚Äôs more technical than we need here.&lt;/li&gt;
  &lt;li&gt;Repository: Collection of stored code or documentation that is written and built like code.&lt;/li&gt;
  &lt;li&gt;Review: Do a line-by-line comparison of a change, much like an editor would for documentation, and comment on improvements or changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These definitions can give you decision points to make about information architecture, so think about which deliverables you‚Äôll make, who should review and collaborate on those deliverables, and how you can automate publishing with the chunks of a repository or an organization as overarching collections.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href=&quot;https://raw.githubusercontent.com/justwriteclick/docslikecode/master/_posts/articles/2016-09-17-github-for-docs.md&quot;&gt;this article‚Äôs source on GitHub&lt;/a&gt; to get a sense of the ‚Äúsource‚Äù for a document. We‚Äôll look at the source aspects in a future article. To stay in touch, subscribe to get relevant emails in your inbox.&lt;/p&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;//justwriteclick.us1.list-manage.com/subscribe/post?u=3828f8d87d82289b96ff8fd19&amp;amp;id=cc1d483d59&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;label for=&quot;mce-EMAIL&quot;&gt;Enter your email address to learn about docs like code together&lt;/label&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_3828f8d87d82289b96ff8fd19_cc1d483d59&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;btn&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;

&lt;!--End mc_embed_signup--&gt;

    &lt;p&gt;&lt;a href=&quot;http://docslikecode.com/articles/github-for-docs/&quot;&gt;The Vocabulary of GitHub for Documentation&lt;/a&gt; was originally published by Anne Gentle at &lt;a href=&quot;http://docslikecode.com&quot;&gt;Write, Version, Merge. Let's Treat Docs Like Code.&lt;/a&gt; on September 17, 2016.&lt;/p&gt;
  </content>
</entry>

</feed>
